package MatrixExam;

import java.util.Scanner;

public class NavyBattle {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int rows = Integer.parseInt(scanner.nextLine());
        int cols = rows;

        String[][] mat = new String[rows][cols];
        int rowS = -1;
        int colS = -1;
        int damage = 0;
        int cruiser = 0;


        int lastKnownRow = 0;
        int lastKnownCol = 0;

        fillM(scanner, rows, mat);

        //findS:
        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < cols; col++) {
                if (mat[row][col].equals("S")) {
                    rowS = row;
                    colS = col;
                }
            }
        }

        String direction = scanner.nextLine();
        while (true) {
            if (direction.equals("up")) {
                lastKnownRow = rowS;
                lastKnownCol = colS;
                mat[rowS][colS] = "-";
                rowS--;
            } else if (direction.equals("down")) {
                lastKnownRow = rowS;
                lastKnownCol = colS;
                mat[rowS][colS] = "-";
                rowS++;
            } else if (direction.equals("left")) {
                lastKnownRow = rowS;
                lastKnownCol = colS;
                mat[rowS][colS] = "-";
                colS--;
            } else if (direction.equals("right")) {
                lastKnownRow = rowS;
                lastKnownCol = colS;
                mat[rowS][colS] = "-";
                colS++;
            }

        //    String movedPlace = mat[rowS][colS];

            if (mat[rowS][colS].equals("*")) {
                mat[rowS][colS] = "-";
                damage += 1;
                if (damage > 2) {
                    mat[rowS][colS] = "-";
                    System.out.printf("Mission failed, U-9 disappeared! Last known coordinates [%d, %d]!", rowS, colS);
                    System.out.println();
                    mat[rowS][colS]  = "S";
                    printM(rows, cols, mat);
                    return;
                }
            } else if (mat[rowS][colS].equals("C")) {
                mat [rowS][colS]= "-";
                cruiser++;
                if (cruiser > 2) {
                    System.out.println("Mission accomplished, U-9 has destroyed all battle cruisers of the enemy!");
                    mat[rowS][colS] = "S";
                    printM(rows, cols, mat);
                    return;
                }
            } else if (mat[rowS][colS].equals("-")) {
                mat[rowS][colS] = "-";
            }
            direction = scanner.nextLine();

        }

    }

    private static void printM(int rows, int cols, String[][] mat) {
        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < cols; col++) {
                System.out.print(mat[row][col]+ "");
            }
            System.out.println();
        }
    }

    private static void fillM(Scanner scanner, int rows, String[][] mat) {
        for (int row = 0; row < rows; row++) {
            mat[row] = scanner.nextLine().split("");
        }
    }
}
